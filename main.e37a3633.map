{"version":3,"sources":["js/modules/random.js","js/modules/ball.js","js/main.js"],"names":["random","min","max","num","Math","floor","Ball","x","y","velX","velY","color","size","prototype","draw","context","beginPath","fillStyle","arc","PI","fill","update","screenSize","width","height","collisionDetect","ballsArr","j","length","dx","dy","distance","sqrt","canvas","document","querySelector","ctx","getContext","window","innerWidth","innerHeight","addEventListener","balls","loop","fillRect","ball","push","i","requestAnimationFrame"],"mappings":"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","file":"main.e37a3633.map","sourceRoot":"..","sourcesContent":["// function to generate random number\nexport function random(min, max) {\n  const num = Math.floor(Math.random() * (max - min)) + min;\n  return num;\n}\n","// import of modules\nimport { random } from './random';\n\n// define Ball constructor\nexport function Ball(x, y, velX, velY, color, size) {\n  this.x = x;\n  this.y = y;\n  this.velX = velX;\n  this.velY = velY;\n  this.color = color;\n  this.size = size;\n}\n\n// define ball draw method\nBall.prototype.draw = function (context) {\n  context.beginPath();\n  context.fillStyle = this.color;\n  context.arc(this.x, this.y, this.size, 0, 2 * Math.PI);\n  context.fill();\n};\n\n// define ball update method\nBall.prototype.update = function (screenSize) {\n  if ((this.x + this.size) >= screenSize.width) {\n    this.velX = -(this.velX);\n  }\n\n  if ((this.x - this.size) <= 0) {\n    this.velX = -(this.velX);\n  }\n\n  if ((this.y + this.size) >= screenSize.height) {\n    this.velY = -(this.velY);\n  }\n\n  if ((this.y - this.size) <= 0) {\n    this.velY = -(this.velY);\n  }\n\n  this.x += this.velX;\n  this.y += this.velY;\n};\n\n// define ball collision detection\nBall.prototype.collisionDetect = function (ballsArr) {\n  for (let j = 0; j < ballsArr.length; j++) {\n    if (!(this === ballsArr[j])) {\n      const dx = this.x - ballsArr[j].x;\n      const dy = this.y - ballsArr[j].y;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n\n      if (distance < this.size + ballsArr[j].size) {\n        ballsArr[j].color = this.color = `rgb(${random(0, 255)},${random(0, 255)},${random(0, 255)})`;\n      }\n    }\n  }\n};\n","// import of modules\nimport { random } from './modules/random';\nimport { Ball } from './modules/ball';\n\n// setup canvas\n\nconst canvas = document.querySelector('canvas');\nconst ctx = canvas.getContext('2d');\n\nlet width = canvas.width = window.innerWidth;\nlet height = canvas.height = window.innerHeight;\nconst screenSize = { width, height };\n\nwindow.addEventListener('resize', () => {\n  width = canvas.width = screenSize.width = window.innerWidth;\n  height = canvas.height = screenSize.height = window.innerHeight;\n});\n\n// define array to store balls\n\nconst balls = [];\n\n// define loop that keeps drawing the scene constantly\n\nfunction loop() {\n  ctx.fillStyle = 'rgba(0,0,0,1)';\n  ctx.fillRect(0, 0, width, height);\n\n  while (balls.length < 25) {\n    const ball = new Ball(\n      random(0, width),\n      random(0, height),\n      random(-7, 7),\n      random(-7, 7),\n      `rgb(${random(0, 255)},${random(0, 255)},${random(0, 255)})`,\n      random(10, 20)\n    );\n    balls.push(ball);\n  }\n\n  for (let i = 0; i < balls.length; i++) {\n    balls[i].draw(ctx);\n    balls[i].update(screenSize);\n    balls[i].collisionDetect(balls);\n  }\n\n  requestAnimationFrame(loop);\n}\n\n\nloop();\n"]}